<?php

/**
 * A reporting interface to the MediaWiki API interfacing with the CiviCRM API
 *
 * @copyright 2015 Gregory Scott Rundlett <greg@freephile.com>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program in the LICENSE file
 *  If not, see <http://www.gnu.org/licenses/>.
 */

namespace eqt\wikireport;

/**
 * UrlWiki is for working with URLs that are MediaWiki related
 * 
 * Specifically, it can tell if a URL is generated by MediaWiki.
 * 
 * In so doing, it will also set the $apiUrl and $wikiUrl
 *
 * @author greg
 */
class UrlWiki extends \eqt\wikireport\Url {
    public $orginalUrl;
    
    public $url;
    
    public $wikiUrl;
    
    public $apiUrl;
    
    public $msg;
    
    public $parsedUrl;
    
    private $isWiki;
    

    /**
     * getter/setter for $this->isWiki
     * 
     * Using a tell-tale 'signature' of a MediaWiki generated page, we can tell
     * if a particular URI is generated by MediaWiki.
     * 
     * @return (bool) $this->isWiki
     */
    function isWiki () {
        if( isset($this->isWiki) ) {
            
            return $this->isWiki;
            
        } else {
            
            $data = file_get_contents($this->url);
            $apiQuery = '?action=query&meta=siteinfo&format=json&siprop=general';

            // a valid MediaWiki page will have a link like so
            // <link rel="EditURI" type="application/rsd+xml" href="https://freephile.org/w/api.php?action=rsd" />
            // if ( preg_match( '#<link rel="EditURI" type="application/rsd\+xml" href="(.*)\?action=rsd"#', $data, $matches) ) {
            if ( preg_match( '#EditURI.* href\="(.*)\?action\=rsd"#U', $data, $matches) ) {
                $apiUrl = $matches[1];
                $this->prefix_scheme($this->parsedUrl['scheme'], $apiUrl);
                
                $fullUrl = $apiUrl . $apiQuery;
                $data = file_get_contents($fullUrl);
                $data = json_decode($data, true);
                $this->wikiUrl = $data['query']['general']['base'];
                $this->apiUrl = $apiUrl;
                $this->isWiki = true;
                $this->msg[] = __METHOD__ . ": wiki found at $this->wikiUrl (given $this->url)";
            } else {
                $this->isWiki = false;
                $msg = "No wiki found at ";
                $msg .= ($this->wikiUrl)? $this->wikiUrl : "'null'";
                $msg .= " (given $this->url)";
                $this->msg[] = __METHOD__ . ": $msg";
            }
            
            return $this->isWiki;
            
        }
    }
    

}
